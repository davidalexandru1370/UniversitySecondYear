Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='varf', type=string}, second=CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}, VariableDeclarationStatement{name='varf', type=string}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}, VariableDeclarationStatement{name='varf', type=string}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}]}
Symbol table:
varf = StringValue{value=''}

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}]}
Symbol table:
varf = StringValue{value=''}

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}, AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}]}
Symbol table:
varf = StringValue{value=''}

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}, AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}]}
Symbol table:
varf = StringValue{value=''}

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}, OpenFile{expression=Variable expression = varf}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}, OpenFile{expression=Variable expression = varf}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}, VariableDeclarationStatement{name='number1', type=int}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}, VariableDeclarationStatement{name='number1', type=int}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}]}
Symbol table:
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}]}
Symbol table:
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}, VariableDeclarationStatement{name='number2', type=int}]}
Symbol table:
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}, VariableDeclarationStatement{name='number2', type=int}]}
Symbol table:
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}]}
Symbol table:
number2 = 0
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}]}
Symbol table:
number2 = 0
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}, ReadFile{expression=Variable expression = varf, variableName='number1'}]}
Symbol table:
number2 = 0
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}, ReadFile{expression=Variable expression = varf, variableName='number1'}]}
Symbol table:
number2 = 0
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}, Print: Variable expression = number1]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}, Print: Variable expression = number1]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}, ReadFile{expression=Variable expression = varf, variableName='number2'}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}, ReadFile{expression=Variable expression = varf, variableName='number2'}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}, Print: Variable expression = number2]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}, Print: Variable expression = number2]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}, VariableDeclarationStatement{name='condition', type=bool}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}, VariableDeclarationStatement{name='condition', type=bool}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}, AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}, AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[Print: ValueExpression{value=StringValue{value='nu'}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[Print: ValueExpression{value=StringValue{value='nu'}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:1052598301
Execution stack:
 MyStack{stack=[]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25
StringValue{value='nu'}

File table: 
test.in
Heap: 

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 57 value = 20

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 57 value = 20

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}, Print: HeapReadingExpression{expression=Variable expression = v}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 57 value = 20

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}, Print: HeapReadingExpression{expression=Variable expression = v}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 57 value = 20

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 57 value = 20

Id:1237240769
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 57 value = 20

Id:1237240769
Execution stack:
 MyStack{stack=[Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}, HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 57 value = 20

Id:1237240769
Execution stack:
 MyStack{stack=[Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}, HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 57 value = 20

Id:1237240769
Execution stack:
 MyStack{stack=[Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 57 value = 30

Id:1237240769
Execution stack:
 MyStack{stack=[Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 57 value = 30

Id:1237240769
Execution stack:
 MyStack{stack=[]}
Symbol table:
v = ReferenceValue{heapAddress=57, locationType=int}

Out:
20
35

File table: 
Heap: 
Heap address = 57 value = 30

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:1437523310
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:729453093
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:729453093
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 190 value = 22

Id:729453093
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 190 value = 30

Id:729453093
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=190, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 190 value = 30

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=39, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 39 value = ReferenceValue{heapAddress=234, locationType=int}
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=39, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 39 value = ReferenceValue{heapAddress=234, locationType=int}
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=39, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 39 value = ReferenceValue{heapAddress=234, locationType=int}
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=39, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=234, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 39 value = ReferenceValue{heapAddress=234, locationType=int}
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=39, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=146, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 146 value = 30
Heap address = 39 value = ReferenceValue{heapAddress=234, locationType=int}
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=39, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=146, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 146 value = 30
Heap address = 39 value = ReferenceValue{heapAddress=234, locationType=int}
Heap address = 234 value = 20

Id:1673512600
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=39, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=146, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 146 value = 30
Heap address = 39 value = ReferenceValue{heapAddress=234, locationType=int}
Heap address = 234 value = 20

Id:2025683102
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}, AssignStatement{id='v', expression=ValueExpression{value=4}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}, AssignStatement{id='v', expression=ValueExpression{value=4}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 4

Out:
4

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 4

Out:
4

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 3

Out:
4
3

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 3

Out:
4
3

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 2

Out:
4
3
2

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 2

Out:
4
3
2

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 1

Out:
4
3
2
1

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 1

Out:
4
3
2
1

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 0

Out:
4
3
2
1

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 0

Out:
4
3
2
1

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v]}
Symbol table:
v = 0

Out:
4
3
2
1

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[Print: Variable expression = v]}
Symbol table:
v = 0

Out:
4
3
2
1

File table: 
Heap: 

Id:2025683102
Execution stack:
 MyStack{stack=[]}
Symbol table:
v = 0

Out:
4
3
2
1
0

File table: 
Heap: 

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 23 value = 20

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: HeapReadingExpression{expression=Variable expression = v}, second=CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 23 value = 20

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}, Print: HeapReadingExpression{expression=Variable expression = v}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 23 value = 20

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}, Print: HeapReadingExpression{expression=Variable expression = v}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 23 value = 20

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 23 value = 20

Id:136220568
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 23 value = 20

Id:136220568
Execution stack:
 MyStack{stack=[Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}, HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 23 value = 20

Id:136220568
Execution stack:
 MyStack{stack=[Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}, HeapWrittingStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 23 value = 20

Id:136220568
Execution stack:
 MyStack{stack=[Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 23 value = 30

Id:136220568
Execution stack:
 MyStack{stack=[Print: ArithmeticExpression{expression1=HeapReadingExpression{expression=Variable expression = v}, expression2=ValueExpression{value=5}, operation='+'}]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 23 value = 30

Id:136220568
Execution stack:
 MyStack{stack=[]}
Symbol table:
v = ReferenceValue{heapAddress=23, locationType=int}

Out:
20
35

File table: 
Heap: 
Heap address = 23 value = 30

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1785183698
Execution stack:
 MyStack{stack=[]}
Symbol table:
b = 22
a = 17

Out:
22

File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:253475945
Execution stack:
 MyStack{stack=[]}
Symbol table:
b = 22
a = 17

Out:
22

File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1939269782
Execution stack:
 MyStack{stack=[]}
Symbol table:
b = 22
a = 17

Out:
22

File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1738645913
Execution stack:
 MyStack{stack=[]}
Symbol table:
b = 22
a = 17

Out:
22

File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1970628522
Execution stack:
 MyStack{stack=[]}
Symbol table:
b = 22
a = 17

Out:
22

File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}, VariableDeclarationStatement{name='a', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='b', type=int}, second=CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}, VariableDeclarationStatement{name='b', type=int}]}
Symbol table:
a = 0

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}, second=CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}, AssignStatement{id='a', expression=ArithmeticExpression{expression1=ValueExpression{value=2}, expression2=ArithmeticExpression{expression1=ValueExpression{value=3}, expression2=ValueExpression{value=5}, operation='*'}, operation='+'}}]}
Symbol table:
b = 0
a = 0

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}, second=Print: Variable expression = b}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[Print: Variable expression = b, AssignStatement{id='b', expression=ArithmeticExpression{expression1=Variable expression = a, expression2=ArithmeticExpression{expression1=ArithmeticExpression{expression1=ValueExpression{value=-4}, expression2=ValueExpression{value=2}, operation='/'}, expression2=ValueExpression{value=7}, operation='+'}, operation='+'}}]}
Symbol table:
b = 0
a = 17

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[Print: Variable expression = b]}
Symbol table:
b = 22
a = 17

Out:
No output.
File table: 
Heap: 

Id:1426569642
Execution stack:
 MyStack{stack=[]}
Symbol table:
b = 22
a = 17

Out:
22

File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1435550227
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1901652155
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1901652155
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 34 value = 22

Id:1901652155
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 34 value = 30

Id:1901652155
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=34, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 34 value = 30

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1097604929
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1409548380
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1409548380
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 48 value = 22

Id:1409548380
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 48 value = 30

Id:1409548380
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=48, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 48 value = 30

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=167, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 167 value = ReferenceValue{heapAddress=58, locationType=int}
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=167, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 167 value = ReferenceValue{heapAddress=58, locationType=int}
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=167, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 167 value = ReferenceValue{heapAddress=58, locationType=int}
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=167, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=58, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 167 value = ReferenceValue{heapAddress=58, locationType=int}
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=167, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=1, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 1 value = 30
Heap address = 167 value = ReferenceValue{heapAddress=58, locationType=int}
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=167, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=1, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 1 value = 30
Heap address = 167 value = ReferenceValue{heapAddress=58, locationType=int}
Heap address = 58 value = 20

Id:474943350
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=167, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=1, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 1 value = 30
Heap address = 167 value = ReferenceValue{heapAddress=58, locationType=int}
Heap address = 58 value = 20

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:166726476
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:275968988
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:275968988
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 92 value = 22

Id:275968988
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 92 value = 30

Id:275968988
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=92, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 92 value = 30

Id:29053173
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=4}}, second=CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}, AssignStatement{id='v', expression=ValueExpression{value=4}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}, AssignStatement{id='v', expression=ValueExpression{value=4}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[CompundStatement{first=WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, second=Print: Variable expression = v}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 4

Out:
No output.
File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 4

Out:
4

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 4

Out:
4

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 3

Out:
4

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 3

Out:
4
3

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 3

Out:
4
3

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 2

Out:
4
3

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 2

Out:
4
3
2

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 2

Out:
4
3
2

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}, Print: Variable expression = v]}
Symbol table:
v = 1

Out:
4
3
2

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 1

Out:
4
3
2
1

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}, AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}]}
Symbol table:
v = 1

Out:
4
3
2
1

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 0

Out:
4
3
2
1

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v, WhileStatement{statement=CompundStatement{first=Print: Variable expression = v, second=AssignStatement{id='v', expression=ArithmeticExpression{expression1=Variable expression = v, expression2=ValueExpression{value=1}, operation='-'}}}, whileConditionalExpression=RelationalExpression{leftHandSideExpression=Variable expression = v > , rightHandSideExpression=ValueExpression{value=0}}}]}
Symbol table:
v = 0

Out:
4
3
2
1

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v]}
Symbol table:
v = 0

Out:
4
3
2
1

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[Print: Variable expression = v]}
Symbol table:
v = 0

Out:
4
3
2
1

File table: 
Heap: 

Id:29053173
Execution stack:
 MyStack{stack=[]}
Symbol table:
v = 0

Out:
4
3
2
1
0

File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='varf', type=string}, second=CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}, VariableDeclarationStatement{name='varf', type=string}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}, VariableDeclarationStatement{name='varf', type=string}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}]}
Symbol table:
varf = StringValue{value=''}

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}, second=CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}}]}
Symbol table:
varf = StringValue{value=''}

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}, AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}]}
Symbol table:
varf = StringValue{value=''}

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}, AssignStatement{id='varf', expression=ValueExpression{value=StringValue{value='test.in'}}}]}
Symbol table:
varf = StringValue{value=''}

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=OpenFile{expression=Variable expression = varf}, second=CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}, OpenFile{expression=Variable expression = varf}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}, OpenFile{expression=Variable expression = varf}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number1', type=int}, second=CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}, VariableDeclarationStatement{name='number1', type=int}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}, VariableDeclarationStatement{name='number1', type=int}]}
Symbol table:
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}]}
Symbol table:
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='number2', type=int}, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}}]}
Symbol table:
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}, VariableDeclarationStatement{name='number2', type=int}]}
Symbol table:
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}, VariableDeclarationStatement{name='number2', type=int}]}
Symbol table:
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}]}
Symbol table:
number2 = 0
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number1'}, second=CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}}]}
Symbol table:
number2 = 0
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}, ReadFile{expression=Variable expression = varf, variableName='number1'}]}
Symbol table:
number2 = 0
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}, ReadFile{expression=Variable expression = varf, variableName='number1'}]}
Symbol table:
number2 = 0
number1 = 0
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number1, second=CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}, Print: Variable expression = number1]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}, Print: Variable expression = number1]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
No output.
File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=ReadFile{expression=Variable expression = varf, variableName='number2'}, second=CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}, ReadFile{expression=Variable expression = varf, variableName='number2'}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}, ReadFile{expression=Variable expression = varf, variableName='number2'}]}
Symbol table:
number2 = 0
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = number2, second=CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}, Print: Variable expression = number2]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}, Print: Variable expression = number2]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='condition', type=bool}, second=CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}, VariableDeclarationStatement{name='condition', type=bool}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}, VariableDeclarationStatement{name='condition', type=bool}]}
Symbol table:
number2 = 25
number1 = 20
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}, second=if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}, AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}, AssignStatement{id='condition', expression=RelationalExpression{leftHandSideExpression=Variable expression = number1 > , rightHandSideExpression=Variable expression = number2}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[if(Variable expression = condition){
	Print: ValueExpression{value=StringValue{value='da'}}
}else{
	Print: ValueExpression{value=StringValue{value='nu'}}
}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[Print: ValueExpression{value=StringValue{value='nu'}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[Print: ValueExpression{value=StringValue{value='nu'}}]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25

File table: 
test.in
Heap: 

Id:336789500
Execution stack:
 MyStack{stack=[]}
Symbol table:
number2 = 25
number1 = 20
condition = Bool(false)
varf = StringValue{value='test.in'}

Out:
20
25
StringValue{value='nu'}

File table: 
test.in
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:1825040726
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:833713635
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:833713635
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 239 value = 22

Id:833713635
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 239 value = 30

Id:833713635
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=239, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 239 value = 30

Id:461416467
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:461416467
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:461416467
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:461416467
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1432594443
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:622376595
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:952282389
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:952282389
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 199 value = 22

Id:952282389
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 199 value = 30

Id:952282389
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=199, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 199 value = 30

Id:1943191316
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1943191316
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1352799086
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1860660478
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1860660478
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 250 value = 22

Id:1860660478
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 250 value = 30

Id:1860660478
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=250, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 250 value = 30

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=184, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20
Heap address = 184 value = ReferenceValue{heapAddress=130, locationType=int}

Id:1062955647
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=184, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20
Heap address = 184 value = ReferenceValue{heapAddress=130, locationType=int}

Id:1062955647
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=184, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20
Heap address = 184 value = ReferenceValue{heapAddress=130, locationType=int}

Id:1062955647
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=184, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=130, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20
Heap address = 184 value = ReferenceValue{heapAddress=130, locationType=int}

Id:1062955647
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=184, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=173, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20
Heap address = 184 value = ReferenceValue{heapAddress=130, locationType=int}
Heap address = 173 value = 30

Id:1062955647
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=184, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=173, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 20
Heap address = 184 value = ReferenceValue{heapAddress=130, locationType=int}
Heap address = 173 value = 30

Id:1062955647
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=184, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=173, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 130 value = 20
Heap address = 184 value = ReferenceValue{heapAddress=130, locationType=int}
Heap address = 173 value = 30

Id:1178403912
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1178403912
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1178403912
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1178403912
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1178403912
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1178403912
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1312274189
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1930017108
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1930017108
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 22 value = 22

Id:1930017108
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 22 value = 30

Id:1930017108
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=22, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 22 value = 30

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1393553075
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1839768344
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1839768344
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 54 value = 22

Id:1839768344
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 54 value = 30

Id:1839768344
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=54, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 54 value = 30

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=117, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20
Heap address = 117 value = ReferenceValue{heapAddress=53, locationType=int}

Id:1252307430
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=117, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20
Heap address = 117 value = ReferenceValue{heapAddress=53, locationType=int}

Id:1252307430
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=117, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20
Heap address = 117 value = ReferenceValue{heapAddress=53, locationType=int}

Id:1252307430
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=117, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=53, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20
Heap address = 117 value = ReferenceValue{heapAddress=53, locationType=int}

Id:1252307430
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=117, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=15, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20
Heap address = 117 value = ReferenceValue{heapAddress=53, locationType=int}
Heap address = 15 value = 30

Id:1252307430
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=117, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=15, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 53 value = 20
Heap address = 117 value = ReferenceValue{heapAddress=53, locationType=int}
Heap address = 15 value = 30

Id:1252307430
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=117, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=15, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 53 value = 20
Heap address = 117 value = ReferenceValue{heapAddress=53, locationType=int}
Heap address = 15 value = 30

Id:1041961265
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=2}}, second=Print: Variable expression = v}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1041961265
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=2}}, second=Print: Variable expression = v}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1041961265
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=2}}, second=Print: Variable expression = v}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1041961265
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=2}}, second=Print: Variable expression = v}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1041961265
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=2}}, second=Print: Variable expression = v}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1041961265
Execution stack:
 MyStack{stack=[Print: Variable expression = v, AssignStatement{id='v', expression=ValueExpression{value=2}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1041961265
Execution stack:
 MyStack{stack=[Print: Variable expression = v, AssignStatement{id='v', expression=ValueExpression{value=2}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1041961265
Execution stack:
 MyStack{stack=[Print: Variable expression = v]}
Symbol table:
v = 2

Out:
No output.
File table: 
Heap: 

Id:1041961265
Execution stack:
 MyStack{stack=[Print: Variable expression = v]}
Symbol table:
v = 2

Out:
No output.
File table: 
Heap: 

Id:1041961265
Execution stack:
 MyStack{stack=[]}
Symbol table:
v = 2

Out:
2

File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:1421875860
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:443294735
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:443294735
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 155 value = 22

Id:443294735
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 155 value = 30

Id:443294735
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=155, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 155 value = 30

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=16, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 16 value = 22

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=16, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 16 value = 22

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=16, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 16 value = 22

Id:278460598
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=16, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 16 value = 22

Id:633340200
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=16, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 16 value = 22

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:1216402750
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:2108783404
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:2108783404
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 37 value = 22

Id:2108783404
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 37 value = 30

Id:2108783404
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=37, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 37 value = 30

Id:711601831
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:711601831
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:1172472628
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:654881125
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:654881125
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 97 value = 22

Id:654881125
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 97 value = 30

Id:654881125
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=97, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 97 value = 30

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:154188086
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=115, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 115 value = 22

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:1827982637
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:271263960
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:271263960
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 245 value = 22

Id:271263960
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 245 value = 30

Id:271263960
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=245, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 245 value = 30

Id:539953829
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:539953829
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:225785403
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:1819239808
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:1819239808
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 130 value = 22

Id:1819239808
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 130 value = 30

Id:1819239808
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=130, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 130 value = 30

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:968786218
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:1464702949
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:1464702949
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 168 value = 22

Id:1464702949
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 168 value = 30

Id:1464702949
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=168, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 168 value = 30

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1522568781
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1163645326
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1163645326
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 135 value = 22

Id:1163645326
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 135 value = 30

Id:1163645326
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=135, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 135 value = 30

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:2115575705
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:1574532213
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:1574532213
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 42 value = 22

Id:1574532213
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 42 value = 30

Id:1574532213
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=42, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 42 value = 30

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:1628203107
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:343470979
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:343470979
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 236 value = 22

Id:343470979
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 236 value = 30

Id:343470979
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=236, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 236 value = 30

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=76, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20
Heap address = 76 value = ReferenceValue{heapAddress=28, locationType=int}

Id:1222186388
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=76, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20
Heap address = 76 value = ReferenceValue{heapAddress=28, locationType=int}

Id:1222186388
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=76, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20
Heap address = 76 value = ReferenceValue{heapAddress=28, locationType=int}

Id:1222186388
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=76, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=28, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 28 value = 20
Heap address = 76 value = ReferenceValue{heapAddress=28, locationType=int}

Id:1222186388
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=76, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=209, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 209 value = 30
Heap address = 28 value = 20
Heap address = 76 value = ReferenceValue{heapAddress=28, locationType=int}

Id:1222186388
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=76, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=209, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 209 value = 30
Heap address = 28 value = 20
Heap address = 76 value = ReferenceValue{heapAddress=28, locationType=int}

Id:1222186388
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=76, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=209, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 209 value = 30
Heap address = 28 value = 20
Heap address = 76 value = ReferenceValue{heapAddress=28, locationType=int}

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1275052384
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1975879597
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1975879597
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 52 value = 22

Id:1975879597
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 52 value = 30

Id:1975879597
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=52, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 52 value = 30

Id:239152565
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:239152565
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:514991981
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:858542990
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:858542990
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 14 value = 22

Id:858542990
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 14 value = 30

Id:858542990
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=14, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 14 value = 30

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=43, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20
Heap address = 43 value = ReferenceValue{heapAddress=153, locationType=int}

Id:243501331
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=43, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20
Heap address = 43 value = ReferenceValue{heapAddress=153, locationType=int}

Id:243501331
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=43, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20
Heap address = 43 value = ReferenceValue{heapAddress=153, locationType=int}

Id:243501331
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=43, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=153, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 153 value = 20
Heap address = 43 value = ReferenceValue{heapAddress=153, locationType=int}

Id:243501331
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=43, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=183, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 183 value = 30
Heap address = 153 value = 20
Heap address = 43 value = ReferenceValue{heapAddress=153, locationType=int}

Id:243501331
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=43, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=183, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 183 value = 30
Heap address = 153 value = 20
Heap address = 43 value = ReferenceValue{heapAddress=153, locationType=int}

Id:243501331
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=43, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=183, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 183 value = 30
Heap address = 153 value = 20
Heap address = 43 value = ReferenceValue{heapAddress=153, locationType=int}

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=ReferenceType{inner=int}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=20}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}, NewStatement{variableName='v', expression=ValueExpression{value=20}}]}
Symbol table:
v = ReferenceValue{heapAddress=0, locationType=int}

Out:
No output.
File table: 
Heap: 

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}, second=CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=ReferenceType{inner=int}}}]}
Symbol table:
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=Variable expression = v}, second=CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=Variable expression = v}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=38, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20
Heap address = 38 value = ReferenceValue{heapAddress=161, locationType=int}

Id:972468241
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='v', expression=ValueExpression{value=30}}, second=Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=38, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20
Heap address = 38 value = ReferenceValue{heapAddress=161, locationType=int}

Id:972468241
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=38, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20
Heap address = 38 value = ReferenceValue{heapAddress=161, locationType=int}

Id:972468241
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}, NewStatement{variableName='v', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=38, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=161, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20
Heap address = 38 value = ReferenceValue{heapAddress=161, locationType=int}

Id:972468241
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=38, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=106, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20
Heap address = 38 value = ReferenceValue{heapAddress=161, locationType=int}
Heap address = 106 value = 30

Id:972468241
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=38, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=106, locationType=int}

Out:
No output.
File table: 
Heap: 
Heap address = 161 value = 20
Heap address = 38 value = ReferenceValue{heapAddress=161, locationType=int}
Heap address = 106 value = 30

Id:972468241
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=38, locationType=ReferenceType{inner=int}}
v = ReferenceValue{heapAddress=106, locationType=int}

Out:
20

File table: 
Heap: 
Heap address = 161 value = 20
Heap address = 38 value = ReferenceValue{heapAddress=161, locationType=int}
Heap address = 106 value = 30

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:435771711
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:569923764
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:569923764
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 88 value = 22

Id:569923764
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 88 value = 30

Id:569923764
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=88, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 88 value = 30

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:2107341978
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:1280717971
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:1280717971
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 90 value = 22

Id:1280717971
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 90 value = 30

Id:1280717971
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=90, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 90 value = 30

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:772042299
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:479064678
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:479064678
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 112 value = 22

Id:479064678
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 112 value = 30

Id:479064678
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=112, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 112 value = 30

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1925306281
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1583169848
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1583169848
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 194 value = 22

Id:1583169848
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 194 value = 30

Id:1583169848
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=194, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 194 value = 30

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='v', type=int}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}, VariableDeclarationStatement{name='v', type=int}]}
Symbol table:

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=10}}, second=CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, AssignStatement{id='v', expression=ValueExpression{value=10}}]}
Symbol table:
v = 0

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}, second=CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}, VariableDeclarationStatement{name='a', type=ReferenceType{inner=int}}]}
Symbol table:
v = 10

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=NewStatement{variableName='a', expression=ValueExpression{value=22}}, second=CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, NewStatement{variableName='a', expression=ValueExpression{value=22}}]}
Symbol table:
a = ReferenceValue{heapAddress=0, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:596440933
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, ForkStatement{statement=CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}, second=CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:1077886966
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:1077886966
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}, HeapWrittingStatement{variableName='a', expression=ValueExpression{value=30}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
No output.
File table: 
Heap: 
Heap address = 101 value = 22

Id:1077886966
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=AssignStatement{id='v', expression=ValueExpression{value=32}}, second=CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
10

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}, AssignStatement{id='v', expression=ValueExpression{value=32}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 10

Out:
10
30

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[CompundStatement{first=Print: Variable expression = v, second=Print: HeapReadingExpression{expression=Variable expression = a}}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}, Print: Variable expression = v]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 32

Out:
10
30

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[Print: HeapReadingExpression{expression=Variable expression = a}]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 32

Out:
10
30
32

File table: 
Heap: 
Heap address = 101 value = 30

Id:1077886966
Execution stack:
 MyStack{stack=[]}
Symbol table:
a = ReferenceValue{heapAddress=101, locationType=int}
v = 32

Out:
10
30
32
30

File table: 
Heap: 
Heap address = 101 value = 30

